spring:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    joda-date-time-format: yyyy-MM-dd HH:mm:ss
  profiles: test
  datasource:
    shoppingMall:
      url: jdbc:mysql://101.201.71.148:3306/shopping_mall?zeroDateTimeBehavior=convertToNull
      username: root
      password: 123456
      driverClassName: com.mysql.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      removeAbandonedTimeout: 60
      removeAbandoned: true
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: true
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat=true
  redis:
    database: 0
    host: 101.201.71.148
    port: 6379
    timeout: 100000 # 连接超时
    pool:
      maxIdle: 10   #最大空闲连接
      max-active: 8   # 最大连接数
      max-wait: -1  # 最大等待时间（使用负值表示没有限制）
      min-idle: 0   # 连接池最小空闲连接

    encoding:
        force: true

    http:
      encoding:
        charset: UTF-8
        enabled: true
  #pagehelper分页插件配置
  pagehelper:
    helperDialect: mysql
    pagehelper: reasonable=true
    supportMethodsArguments: true
    params: count=countSql